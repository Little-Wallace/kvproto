syntax = "proto3";
package compaction;

import "gogoproto/gogo.proto";
import "coprocessor.proto";
import "metapb.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

option java_package = "org.tikv.kvproto";


// Dipsatch the task request to compact server..
message StartCompactRequest {
    string db_id = 1;
    string db_session_id = 2;
    int64 store_id = 3;
    int64 job_id = 4;
    string address = 5;
    bytes input = 6;
}

enum JobStatus {
    Running = 0;
    FallbackLocal = 1;
    Finished = 2;
    Fail = 3;
}

message Error {
    int32 code = 1;
    string msg = 2;
}

message StartCompactResponse {
    JobStatus status = 1;
	Error error = 2;
}

message QueryCompactionRequest {
    string db_id = 1;
    string db_session_id = 2;
    int64 store_id = 3;
    int64 job_id = 4;
    string address = 5; 
}

message QueryCompactionResponse {
    JobStatus status = 1;
    Error error = 2;
    bytes output = 3;
}


service CompactService {
  rpc StartCompact(StartCompactRequest) returns (StartCompactResponse) {}
  rpc QueryCompactionStatus(QueryCompactionRequest) returns (QueryCompactionResponse) {}
}

